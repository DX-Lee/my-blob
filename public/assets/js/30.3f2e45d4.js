(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{509:function(n,s,t){"use strict";t.r(s);var a=t(4),e=Object(a.a)({},(function(){var n=this,s=n.$createElement,t=n._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h4",{attrs:{id:"如何理解javascript-执行上下文"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何理解javascript-执行上下文"}},[n._v("#")]),n._v(" 如何理解JavaScript 执行上下文")]),n._v(" "),t("p",[n._v("JavaScript 中的执行上下文就是 "),t("strong",[n._v("评估和执行 JavaScript 代码")]),n._v(" 的环境的抽象概念。JavaScript 代码都是在执行上下文中运行，当执行一个函数的时候，就会创建执行上下文，并把它放到"),t("strong",[n._v("执行栈")]),n._v("中去执行。")]),n._v(" "),t("p",[t("strong",[n._v("执行栈")])]),n._v(" "),t("p",[n._v("执行栈即调用栈，是拥有 “先进后出” 数据结构的栈，用来存储代码运行时创建的执行上下文。当 JavaScript 引擎第一次执行代码的时候会创建一个执行上下文，这个执行上下文就是全局执行上下文，并把它压入到执行栈中去，每当运行一个函数就会创建一个新的执行上下文，把它压入到调用栈的顶部。函数执行完后执行上下文从栈顶弹出，然后执行栈继续执行下面的执行上下文。")]),n._v(" "),t("p",[n._v("有三种执行上下文类型：")]),n._v(" "),t("ul",[t("li",[n._v("全局执行上下文")]),n._v(" "),t("li",[n._v("函数执行上下文")]),n._v(" "),t("li",[n._v("Eval 执行上下文")])]),n._v(" "),t("p",[t("strong",[n._v("执行上下文的创建")])]),n._v(" "),t("p",[n._v("分为 "),t("strong",[n._v("创建阶段和执行阶段")])]),n._v(" "),t("ul",[t("li",[t("p",[t("strong",[n._v("创建阶段")])]),n._v(" "),t("p",[n._v("创建阶段主要做了三件事：")]),n._v(" "),t("ol",[t("li",[n._v("绑定 this")]),n._v(" "),t("li",[n._v("创建词法环境")]),n._v(" "),t("li",[n._v("创建变量环境")])]),n._v(" "),t("p",[t("strong",[n._v("this 绑定")])]),n._v(" "),t("p",[n._v("全局执行上下文中 this 指向的是全局对象，函数执行上下文中 this 取决于被谁调用，如果它被一个对象调用，那么 this 就指向这个对象，可以通过 bind,apply,call 等方法改变 this 的指向，否则 this 指向全局对象，严格模式下指向 undefined。注意：箭头函数的 this 取决于外层函数。")]),n._v(" "),t("p",[t("strong",[n._v("词法环境")])]),n._v(" "),t("p",[n._v("官方 ES6 文档的定义")]),n._v(" "),t("blockquote",[t("p",[t("strong",[n._v("词法环境")]),n._v("是一种规范类型，基于 ECMAScript 代码的词法嵌套结构来定义"),t("strong",[n._v("标识符")]),n._v("和具体变量和函数的关联。一个词法环境由环境记录器和一个可能的引用"),t("strong",[n._v("外部")]),n._v("词法环境的空值组成。")])]),n._v(" "),t("p",[n._v("简单来说词法环境就是一种持有 "),t("strong",[n._v("标识符-变量映射")]),n._v(" 的结构。")]),n._v(" "),t("p",[n._v("词法环境由环境记录器和一个可能的外部词法环境的空值组成")]),n._v(" "),t("ol",[t("li",[t("p",[n._v("环境记录器用来记录变量和函数")])]),n._v(" "),t("li",[t("p",[n._v("外部引用即可以访问父级词法环境（作用域）")]),n._v(" "),t("p",[t("strong",[n._v("词法环境")]),n._v("有两种类型：")]),n._v(" "),t("ul",[t("li",[t("strong",[n._v("全局环境")]),n._v("（在全局执行上下文中）是没有外部环境引用的词法环境。全局环境的外部环境引用是 "),t("strong",[n._v("null")]),n._v("。它拥有内建的 Object/Array/等、在"),t("strong",[n._v("环境记录器")]),n._v("内的原型函数（关联全局对象，比如 window 对象）还有任何用户定义的全局变量，并且 "),t("code",[n._v("this")]),n._v("的值指向全局对象。")]),n._v(" "),t("li",[n._v("在"),t("strong",[n._v("函数环境")]),n._v("中，函数内部用户定义的变量存储在"),t("strong",[n._v("环境记录器")]),n._v("中。并且引用的外部环境可能是全局环境，或者任何包含此内部函数的外部函数。")])]),n._v(" "),t("p",[t("strong",[n._v("环境记录器也有两种类型：")])]),n._v(" "),t("ol",[t("li",[t("strong",[n._v("声明式环境记录器")]),n._v("存储变量、函数和参数。")]),n._v(" "),t("li",[t("strong",[n._v("对象环境记录器")]),n._v("用来定义出现在"),t("strong",[n._v("全局上下文")]),n._v("中的变量和函数的关系。")])]),n._v(" "),t("p",[n._v("总而言之")]),n._v(" "),t("ol",[t("li",[n._v("全局环境中环境记录器是对象环境记录器")]),n._v(" "),t("li",[n._v("函数环境中环境记录器是声明式环境记录器")])])])]),n._v(" "),t("p",[t("strong",[n._v("变量环境")])]),n._v(" "),t("p",[n._v("变量环境也是一个词法环境，它和词法环境的区别在于 "),t("strong",[n._v("词法环境存储的是 let，const 和函数声明的绑定")]),n._v(" ，"),t("strong",[n._v("变量环境存储的是 var 变量的绑定")])]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("let a = 1\nvar name = 'hello'\nfunction test (b,c) {\n\tlet d = 2\n\tvar f = 4\n\treturn b + c + d + f\n}\ntest(2,3)\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br")])]),t("p",[n._v("执行上下文看起来像这样：")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('// 全局执行上下文\nGlobalExectionContext = {\n\n  ThisBinding: <Global Object>,\n\n  LexicalEnvironment: {\n    EnvironmentRecord: {\n      Type: "Object",\n      // 在这里绑定标识符\n      a: < uninitialized >,\n      test: < func >\n    }\n    outer: <null>\n  },\n\n  VariableEnvironment: {\n    EnvironmentRecord: {\n      Type: "Object",\n      // 在这里绑定标识符\n      name: undefined,\n    }\n    outer: <null>\n  }\n}\n// 函数执行上下文\nFunctionExectionContext = {\n  ThisBinding: <Global Object>,\n\n  LexicalEnvironment: {\n    EnvironmentRecord: {\n      Type: "Declarative",\n      // 在这里绑定标识符\n      d: < uninitialized >,\n      Arguments: {0: 2, 1: 3, length: 2},\n    },\n    outer: <GlobalLexicalEnvironment>\n  },\n\nVariableEnvironment: {\n    EnvironmentRecord: {\n      Type: "Declarative",\n      // 在这里绑定标识符\n      f: undefined\n    },\n    outer: <GlobalLexicalEnvironment>\n  }\n}\n')])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br"),t("span",{staticClass:"line-number"},[n._v("16")]),t("br"),t("span",{staticClass:"line-number"},[n._v("17")]),t("br"),t("span",{staticClass:"line-number"},[n._v("18")]),t("br"),t("span",{staticClass:"line-number"},[n._v("19")]),t("br"),t("span",{staticClass:"line-number"},[n._v("20")]),t("br"),t("span",{staticClass:"line-number"},[n._v("21")]),t("br"),t("span",{staticClass:"line-number"},[n._v("22")]),t("br"),t("span",{staticClass:"line-number"},[n._v("23")]),t("br"),t("span",{staticClass:"line-number"},[n._v("24")]),t("br"),t("span",{staticClass:"line-number"},[n._v("25")]),t("br"),t("span",{staticClass:"line-number"},[n._v("26")]),t("br"),t("span",{staticClass:"line-number"},[n._v("27")]),t("br"),t("span",{staticClass:"line-number"},[n._v("28")]),t("br"),t("span",{staticClass:"line-number"},[n._v("29")]),t("br"),t("span",{staticClass:"line-number"},[n._v("30")]),t("br"),t("span",{staticClass:"line-number"},[n._v("31")]),t("br"),t("span",{staticClass:"line-number"},[n._v("32")]),t("br"),t("span",{staticClass:"line-number"},[n._v("33")]),t("br"),t("span",{staticClass:"line-number"},[n._v("34")]),t("br"),t("span",{staticClass:"line-number"},[n._v("35")]),t("br"),t("span",{staticClass:"line-number"},[n._v("36")]),t("br"),t("span",{staticClass:"line-number"},[n._v("37")]),t("br"),t("span",{staticClass:"line-number"},[n._v("38")]),t("br"),t("span",{staticClass:"line-number"},[n._v("39")]),t("br"),t("span",{staticClass:"line-number"},[n._v("40")]),t("br"),t("span",{staticClass:"line-number"},[n._v("41")]),t("br"),t("span",{staticClass:"line-number"},[n._v("42")]),t("br"),t("span",{staticClass:"line-number"},[n._v("43")]),t("br"),t("span",{staticClass:"line-number"},[n._v("44")]),t("br"),t("span",{staticClass:"line-number"},[n._v("45")]),t("br"),t("span",{staticClass:"line-number"},[n._v("46")]),t("br"),t("span",{staticClass:"line-number"},[n._v("47")]),t("br")])]),t("p",[n._v("由上可知 "),t("strong",[n._v("let const")]),n._v(" 定义的变量开始没有关联任何值，而 "),t("strong",[n._v("var")]),n._v(" 定义的变量设置为 "),t("strong",[n._v("undefined")]),n._v(" 。这也就解释了 let const 声明的变量在声明位置之前使用会报错，而 var 声明的变量值 是 "),t("strong",[n._v("undefined")])])]),n._v(" "),t("li",[t("p",[t("strong",[n._v("执行阶段")])]),n._v(" "),t("p",[n._v("执行阶段完成变量的分配，最后执行代码")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);