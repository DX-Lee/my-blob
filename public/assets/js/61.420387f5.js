(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{540:function(t,s,n){"use strict";n.r(s);var a=n(4),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h4",{attrs:{id:"正则表达式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式"}},[t._v("#")]),t._v(" 正则表达式")]),t._v(" "),n("p",[t._v("正则表达式包含模式和可选修饰符\n"),n("strong",[t._v("修饰符")]),t._v("主要包括以下几种：")]),t._v(" "),n("blockquote",[n("ul",[n("li",[t._v("i ：搜索时不区分大小写")]),t._v(" "),n("li",[t._v("g : 全局搜索")]),t._v(" "),n("li",[t._v("m: 多行匹配")]),t._v(" "),n("li",[t._v("u: 开启完整的unicode支持")]),t._v(" "),n("li",[t._v("y: 粘连模式")])])]),t._v(" "),n("p",[t._v("有两种创建方法")]),t._v(" "),n("blockquote",[n("ol",[n("li",[t._v("使用 "),n("strong",[t._v("/")])]),t._v(" "),n("li",[t._v("使用 RegExp"),n("br"),t._v("\n区别： 简单语法不接受变量输入，在创建的时候就必须确定regexp, new RegExp 允许 从字符串中动态的构造模式。")])])]),t._v(" "),n("p",[n("strong",[t._v("字符类")])]),t._v(" "),n("blockquote",[n("p",[t._v("\\d : (d 来自 digit)\n数字： 0-9 的字符\n\\w: (w 来自 word)\n'单字'字符： 拉丁字母数字或下划线\n\\s: (s 来自 space)\n空格符号: 包括空格 , 制表符 \\t, 换行符 \\n和其他少数稀有字符")])]),t._v(" "),n("p",[n("strong",[t._v("反向类")])]),t._v(" "),n("blockquote",[n("p",[t._v("\\D\n非数字： 除 \\d 以外的所有字符\n\\W\n非单字字符：拉丁字母或者空格\n\\S\n非空格符号: \\s 以外的任何字符")])]),t._v(" "),n("p",[t._v("####(.)匹配除了\\n(换行符以外)任何字符\n"),n("strong",[t._v("注意")]),t._v(": 是匹配任何字符，而不是缺少字符，必须有一个字符与它匹配。\n带 s 标志的点字符类严格匹配任何字符")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"A\\nB"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token regex"}},[n("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("A.B")]),n("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// null (no match)")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"A\\nB"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token regex"}},[n("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("A.B")]),n("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("s")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// A\\nB (match!)")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);