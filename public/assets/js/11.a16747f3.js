(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{494:function(t,s,n){"use strict";n.r(s);var a=n(4),i=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("p",[n("strong",[t._v("优先队列")])]),t._v(" "),n("p",[t._v("堆本质上是一种二叉树，但是这棵二叉树比较特殊，除了用数组来依次存储各个节点(节点对应的数组下标和"),n("strong",[t._v("层序遍历的序号")]),t._v("一致)之外，它需要保证"),n("strong",[t._v("任何一个父节点的优先级大于子节点")]),t._v("，这也是它最关键的性质，因为保证了根元素一定是优先级最高的。")]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("先实现一个最大堆\nclss MaxHeap {\n\tconstructor (arr, compare) {\n\t\tthis.data = arr\n\t\tthis.size = arr.length\n\t\tthis.compare = compare\n\t}\n\tgetSize () {\n\t\treturn this.size\n\t}\n\tisEmpty () {\n\t\treturn this.size === 0\n\t}\n\tadd (value) {\n\t\tthis.data.push(value)\n\t\tthis.size++\n\t\tthis._siftUp(this.getSize() - 1)\n\t}\n\tfindMax () {\n\t\tif (this.getSize() === 0) {\n\t\t\treturn\n\t\t}\n\t\treturn this.data[0]\n\t}\n\t// 让优先级最大的元素出队列 即队首元素\n\textractMax () {\n\t\t// 先要保存队首元素\n\t\tlet ret = this.data[0]\n\t\t// 将队首元素与队尾元素交换位置\n\t\tthis._swap(0, this.getSize() - 1)\n\t\t// 将对首元素踢出去\n\t\tthis.data.pop()\n\t\tthis.size--\n\t\t// 对新对首 sighDown\n\t\tthis._siftDown(0)\n\t\treturn ret\n\t}\n\ttoString () {\n\t\tconsole.log(this.data)\n\t}\n\t_swap(i, j) {\n\t\t[this.data[i], this.data[j]] = [this.data[j], this.data[i]]\n\t}\n\t_parent (index) {\n\t\treturn Math.floor((index - 1) / 2)\n\t}\n\t_leftchild (index) {\n\t\treturn 2 * index + 1\n\t}\n\t_rightchild(index) {\n\t\treturn 2 * index + 2\n\t}\n\t_siftUp(k){\n\t// 只要 子元素优先级大于父元素就上浮\n\t\twhile (k > 0 && this.compare(this.data[k], this.data[this._parent(k)])) {\n\t\t\tthis._swap(k, this._parent(k))\n\t\t\tk = this._parent(k)\n\t\t}\n\t}\n\t_siftDown (k) {\n\t\t// 当存在左孩子的时候\n\t\twhile(this._leftchild(k) < this.size) {\n\t\t\tlet j = this._leftchild(k)\n\t\t\t// 当存在右孩子 且 右孩子大于左孩子时候\n\t\t\tif(this._rightchild(k) && this.compare(this.data[this._rightchild(k)], this.data[j])) {\n\t\t\t\tj++\n\t\t\t}\n\t\t\tif (this.compare(this.data[k], this.data[j])) {\n\t\t\t\t// 父节点大于子节点 不处理\n\t\t\t\treturn\n\t\t\t}\n\t\t\t// 否则交换位置 继续下沉\n\t\t\tthis._swap(k, j)\n\t\t\tk = j\n\t\t}\n\t}\n}\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br"),n("span",{staticClass:"line-number"},[t._v("27")]),n("br"),n("span",{staticClass:"line-number"},[t._v("28")]),n("br"),n("span",{staticClass:"line-number"},[t._v("29")]),n("br"),n("span",{staticClass:"line-number"},[t._v("30")]),n("br"),n("span",{staticClass:"line-number"},[t._v("31")]),n("br"),n("span",{staticClass:"line-number"},[t._v("32")]),n("br"),n("span",{staticClass:"line-number"},[t._v("33")]),n("br"),n("span",{staticClass:"line-number"},[t._v("34")]),n("br"),n("span",{staticClass:"line-number"},[t._v("35")]),n("br"),n("span",{staticClass:"line-number"},[t._v("36")]),n("br"),n("span",{staticClass:"line-number"},[t._v("37")]),n("br"),n("span",{staticClass:"line-number"},[t._v("38")]),n("br"),n("span",{staticClass:"line-number"},[t._v("39")]),n("br"),n("span",{staticClass:"line-number"},[t._v("40")]),n("br"),n("span",{staticClass:"line-number"},[t._v("41")]),n("br"),n("span",{staticClass:"line-number"},[t._v("42")]),n("br"),n("span",{staticClass:"line-number"},[t._v("43")]),n("br"),n("span",{staticClass:"line-number"},[t._v("44")]),n("br"),n("span",{staticClass:"line-number"},[t._v("45")]),n("br"),n("span",{staticClass:"line-number"},[t._v("46")]),n("br"),n("span",{staticClass:"line-number"},[t._v("47")]),n("br"),n("span",{staticClass:"line-number"},[t._v("48")]),n("br"),n("span",{staticClass:"line-number"},[t._v("49")]),n("br"),n("span",{staticClass:"line-number"},[t._v("50")]),n("br"),n("span",{staticClass:"line-number"},[t._v("51")]),n("br"),n("span",{staticClass:"line-number"},[t._v("52")]),n("br"),n("span",{staticClass:"line-number"},[t._v("53")]),n("br"),n("span",{staticClass:"line-number"},[t._v("54")]),n("br"),n("span",{staticClass:"line-number"},[t._v("55")]),n("br"),n("span",{staticClass:"line-number"},[t._v("56")]),n("br"),n("span",{staticClass:"line-number"},[t._v("57")]),n("br"),n("span",{staticClass:"line-number"},[t._v("58")]),n("br"),n("span",{staticClass:"line-number"},[t._v("59")]),n("br"),n("span",{staticClass:"line-number"},[t._v("60")]),n("br"),n("span",{staticClass:"line-number"},[t._v("61")]),n("br"),n("span",{staticClass:"line-number"},[t._v("62")]),n("br"),n("span",{staticClass:"line-number"},[t._v("63")]),n("br"),n("span",{staticClass:"line-number"},[t._v("64")]),n("br"),n("span",{staticClass:"line-number"},[t._v("65")]),n("br"),n("span",{staticClass:"line-number"},[t._v("66")]),n("br"),n("span",{staticClass:"line-number"},[t._v("67")]),n("br"),n("span",{staticClass:"line-number"},[t._v("68")]),n("br"),n("span",{staticClass:"line-number"},[t._v("69")]),n("br"),n("span",{staticClass:"line-number"},[t._v("70")]),n("br"),n("span",{staticClass:"line-number"},[t._v("71")]),n("br"),n("span",{staticClass:"line-number"},[t._v("72")]),n("br"),n("span",{staticClass:"line-number"},[t._v("73")]),n("br"),n("span",{staticClass:"line-number"},[t._v("74")]),n("br"),n("span",{staticClass:"line-number"},[t._v("75")]),n("br"),n("span",{staticClass:"line-number"},[t._v("76")]),n("br"),n("span",{staticClass:"line-number"},[t._v("77")]),n("br")])])])}),[],!1,null,null,null);s.default=i.exports}}]);